// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: github.com/gunk/gunk-example-server/api/v1/all.proto

package v1

import (
	reflect "reflect"
	sync "sync"

	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Status is a server health status.
type Status int32

const (
	Status_Unknown Status = 0
	Status_Error   Status = 1
	Status_OK      Status = 2
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "Unknown",
		1: "Error",
		2: "OK",
	}
	Status_value = map[string]int32{
		"Unknown": 0,
		"Error":   1,
		"OK":      2,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_gunk_gunk_example_server_api_v1_all_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_github_com_gunk_gunk_example_server_api_v1_all_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_github_com_gunk_gunk_example_server_api_v1_all_proto_rawDescGZIP(), []int{0}
}

// Country contains country information.
type Country struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=Name,json=name,proto3" json:"name,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=Code,json=code,proto3" json:"code,omitempty"`
}

func (x *Country) Reset() {
	*x = Country{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_gunk_gunk_example_server_api_v1_all_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Country) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Country) ProtoMessage() {}

func (x *Country) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_gunk_gunk_example_server_api_v1_all_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Country.ProtoReflect.Descriptor instead.
func (*Country) Descriptor() ([]byte, []int) {
	return file_github_com_gunk_gunk_example_server_api_v1_all_proto_rawDescGZIP(), []int{0}
}

func (x *Country) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Country) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// GetCountriesRequest is the get countries request.
type GetCountriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Countries []string `protobuf:"bytes,1,rep,name=Countries,json=countries,proto3" json:"countries,omitempty"`
}

func (x *GetCountriesRequest) Reset() {
	*x = GetCountriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_gunk_gunk_example_server_api_v1_all_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountriesRequest) ProtoMessage() {}

func (x *GetCountriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_gunk_gunk_example_server_api_v1_all_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountriesRequest.ProtoReflect.Descriptor instead.
func (*GetCountriesRequest) Descriptor() ([]byte, []int) {
	return file_github_com_gunk_gunk_example_server_api_v1_all_proto_rawDescGZIP(), []int{1}
}

func (x *GetCountriesRequest) GetCountries() []string {
	if x != nil {
		return x.Countries
	}
	return nil
}

// GetCountriesResponse is the get countries response.
type GetCountriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Countries map[string]*Country `protobuf:"bytes,1,rep,name=Countries,json=countries,proto3" json:"countries,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetCountriesResponse) Reset() {
	*x = GetCountriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_gunk_gunk_example_server_api_v1_all_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountriesResponse) ProtoMessage() {}

func (x *GetCountriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_gunk_gunk_example_server_api_v1_all_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountriesResponse.ProtoReflect.Descriptor instead.
func (*GetCountriesResponse) Descriptor() ([]byte, []int) {
	return file_github_com_gunk_gunk_example_server_api_v1_all_proto_rawDescGZIP(), []int{2}
}

func (x *GetCountriesResponse) GetCountries() map[string]*Country {
	if x != nil {
		return x.Countries
	}
	return nil
}

// Message is a echo message.
type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Msg holds a message.
	Msg  string `protobuf:"bytes,1,opt,name=Msg,json=msg,proto3" json:"msg,omitempty"`
	Code int32  `protobuf:"varint,2,opt,name=Code,json=code,proto3" json:"code,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_gunk_gunk_example_server_api_v1_all_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_gunk_gunk_example_server_api_v1_all_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_github_com_gunk_gunk_example_server_api_v1_all_proto_rawDescGZIP(), []int{3}
}

func (x *Message) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Message) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

// CheckStatusResponse is the server health status response.
type CheckStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=Status,json=status,proto3,enum=gunk.example.v1.Status" json:"status,omitempty"`
	// Deprecated: Do not use.
	OldField int32 `protobuf:"varint,2,opt,name=OldField,json=old_field,proto3" json:"old_field,omitempty"`
}

func (x *CheckStatusResponse) Reset() {
	*x = CheckStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_gunk_gunk_example_server_api_v1_all_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckStatusResponse) ProtoMessage() {}

func (x *CheckStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_gunk_gunk_example_server_api_v1_all_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckStatusResponse.ProtoReflect.Descriptor instead.
func (*CheckStatusResponse) Descriptor() ([]byte, []int) {
	return file_github_com_gunk_gunk_example_server_api_v1_all_proto_rawDescGZIP(), []int{4}
}

func (x *CheckStatusResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Unknown
}

// Deprecated: Do not use.
func (x *CheckStatusResponse) GetOldField() int32 {
	if x != nil {
		return x.OldField
	}
	return 0
}

var File_github_com_gunk_gunk_example_server_api_v1_all_proto protoreflect.FileDescriptor

var file_github_com_gunk_gunk_example_server_api_v1_all_proto_rawDesc = []byte{
	0x0a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x75, 0x6e,
	0x6b, 0x2f, 0x67, 0x75, 0x6e, 0x6b, 0x2d, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2d, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x67, 0x75, 0x6e, 0x6b, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x51, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1e, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18,
	0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18,
	0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x3a, 0x06, 0x08,
	0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0x47, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x09,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42,
	0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0xca,
	0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x09, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x75, 0x6e,
	0x6b, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x09, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x4a, 0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0b, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x75, 0x6e, 0x6b, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x3a,
	0x02, 0x38, 0x01, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0x4f, 0x0a, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0x83, 0x01, 0x0a,
	0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x67, 0x75, 0x6e, 0x6b, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0a, 0x08,
	0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x27, 0x0a, 0x08, 0x4f, 0x6c, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x01, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52,
	0x09, 0x6f, 0x6c, 0x64, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00,
	0x18, 0x00, 0x2a, 0x38, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x07,
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x1a, 0x02, 0x08, 0x00, 0x12, 0x0d, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01, 0x1a, 0x02, 0x08, 0x00, 0x12, 0x0a, 0x0a, 0x02,
	0x4f, 0x4b, 0x10, 0x02, 0x1a, 0x02, 0x08, 0x00, 0x1a, 0x02, 0x18, 0x00, 0x32, 0xac, 0x01, 0x0a,
	0x09, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x99, 0x01, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x24, 0x2e, 0x67, 0x75,
	0x6e, 0x6b, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x67, 0x75, 0x6e, 0x6b, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x88, 0x02, 0x00, 0x90, 0x02, 0x00,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x5a, 0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x7d, 0x12, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x28, 0x00, 0x30, 0x00, 0x1a, 0x03, 0x88, 0x02, 0x00, 0x32, 0xdb, 0x01, 0x0a, 0x04,
	0x55, 0x74, 0x69, 0x6c, 0x12, 0x67, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x24, 0x2e, 0x67, 0x75,
	0x6e, 0x6b, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x18, 0x88, 0x02, 0x00, 0x90, 0x02, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12,
	0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x30, 0x00, 0x12, 0x65, 0x0a,
	0x04, 0x45, 0x63, 0x68, 0x6f, 0x12, 0x18, 0x2e, 0x67, 0x75, 0x6e, 0x6b, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a,
	0x18, 0x2e, 0x67, 0x75, 0x6e, 0x6b, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x25, 0x88, 0x02, 0x00, 0x90, 0x02,
	0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x5a, 0x0d, 0x3a, 0x01, 0x2a, 0x22, 0x08, 0x2f, 0x76,
	0x31, 0x2f, 0x65, 0x63, 0x68, 0x6f, 0x12, 0x08, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x63, 0x68, 0x6f,
	0x28, 0x00, 0x30, 0x00, 0x1a, 0x03, 0x88, 0x02, 0x00, 0x42, 0x59, 0x0a, 0x0f, 0x67, 0x75, 0x6e,
	0x6b, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x48, 0x01, 0x50, 0x01,
	0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x75, 0x6e,
	0x6b, 0x2f, 0x67, 0x75, 0x6e, 0x6b, 0x2d, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2d, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x80,
	0x01, 0x00, 0x88, 0x01, 0x00, 0x90, 0x01, 0x00, 0xb8, 0x01, 0x00, 0xd8, 0x01, 0x00, 0xf8, 0x01,
	0x01, 0xd0, 0x02, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_gunk_gunk_example_server_api_v1_all_proto_rawDescOnce sync.Once
	file_github_com_gunk_gunk_example_server_api_v1_all_proto_rawDescData = file_github_com_gunk_gunk_example_server_api_v1_all_proto_rawDesc
)

func file_github_com_gunk_gunk_example_server_api_v1_all_proto_rawDescGZIP() []byte {
	file_github_com_gunk_gunk_example_server_api_v1_all_proto_rawDescOnce.Do(func() {
		file_github_com_gunk_gunk_example_server_api_v1_all_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_gunk_gunk_example_server_api_v1_all_proto_rawDescData)
	})
	return file_github_com_gunk_gunk_example_server_api_v1_all_proto_rawDescData
}

var (
	file_github_com_gunk_gunk_example_server_api_v1_all_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
	file_github_com_gunk_gunk_example_server_api_v1_all_proto_msgTypes  = make([]protoimpl.MessageInfo, 6)
	file_github_com_gunk_gunk_example_server_api_v1_all_proto_goTypes   = []interface{}{
		(Status)(0),                  // 0: gunk.example.v1.Status
		(*Country)(nil),              // 1: gunk.example.v1.Country
		(*GetCountriesRequest)(nil),  // 2: gunk.example.v1.GetCountriesRequest
		(*GetCountriesResponse)(nil), // 3: gunk.example.v1.GetCountriesResponse
		(*Message)(nil),              // 4: gunk.example.v1.Message
		(*CheckStatusResponse)(nil),  // 5: gunk.example.v1.CheckStatusResponse
		nil,                          // 6: gunk.example.v1.GetCountriesResponse.CountriesEntry
		(*emptypb.Empty)(nil),        // 7: google.protobuf.Empty
	}
)

var file_github_com_gunk_gunk_example_server_api_v1_all_proto_depIdxs = []int32{
	6, // 0: gunk.example.v1.GetCountriesResponse.Countries:type_name -> gunk.example.v1.GetCountriesResponse.CountriesEntry
	0, // 1: gunk.example.v1.CheckStatusResponse.Status:type_name -> gunk.example.v1.Status
	1, // 2: gunk.example.v1.GetCountriesResponse.CountriesEntry.value:type_name -> gunk.example.v1.Country
	2, // 3: gunk.example.v1.Countries.GetCountries:input_type -> gunk.example.v1.GetCountriesRequest
	7, // 4: gunk.example.v1.Util.CheckStatus:input_type -> google.protobuf.Empty
	4, // 5: gunk.example.v1.Util.Echo:input_type -> gunk.example.v1.Message
	3, // 6: gunk.example.v1.Countries.GetCountries:output_type -> gunk.example.v1.GetCountriesResponse
	5, // 7: gunk.example.v1.Util.CheckStatus:output_type -> gunk.example.v1.CheckStatusResponse
	4, // 8: gunk.example.v1.Util.Echo:output_type -> gunk.example.v1.Message
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_github_com_gunk_gunk_example_server_api_v1_all_proto_init() }
func file_github_com_gunk_gunk_example_server_api_v1_all_proto_init() {
	if File_github_com_gunk_gunk_example_server_api_v1_all_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_gunk_gunk_example_server_api_v1_all_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Country); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_gunk_gunk_example_server_api_v1_all_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_gunk_gunk_example_server_api_v1_all_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_gunk_gunk_example_server_api_v1_all_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_gunk_gunk_example_server_api_v1_all_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_gunk_gunk_example_server_api_v1_all_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_github_com_gunk_gunk_example_server_api_v1_all_proto_goTypes,
		DependencyIndexes: file_github_com_gunk_gunk_example_server_api_v1_all_proto_depIdxs,
		EnumInfos:         file_github_com_gunk_gunk_example_server_api_v1_all_proto_enumTypes,
		MessageInfos:      file_github_com_gunk_gunk_example_server_api_v1_all_proto_msgTypes,
	}.Build()
	File_github_com_gunk_gunk_example_server_api_v1_all_proto = out.File
	file_github_com_gunk_gunk_example_server_api_v1_all_proto_rawDesc = nil
	file_github_com_gunk_gunk_example_server_api_v1_all_proto_goTypes = nil
	file_github_com_gunk_gunk_example_server_api_v1_all_proto_depIdxs = nil
}
