// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: all.proto

package gunk.example.v1;

/**
 * <pre>
 * GetCountriesResponse is the get countries response.
 * </pre>
 *
 * Protobuf type {@code gunk.example.v1.GetCountriesResponse}
 */
public  final class GetCountriesResponse extends
    com.google.protobuf.GeneratedMessageLite<
        GetCountriesResponse, GetCountriesResponse.Builder> implements
    // @@protoc_insertion_point(message_implements:gunk.example.v1.GetCountriesResponse)
    GetCountriesResponseOrBuilder {
  private GetCountriesResponse() {
  }
  public static final int COUNTRIES_FIELD_NUMBER = 1;
  private static final class CountriesDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.String, gunk.example.v1.Country> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.String, gunk.example.v1.Country>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                gunk.example.v1.Country.getDefaultInstance());
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.String, gunk.example.v1.Country> countries_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.String, gunk.example.v1.Country>
  internalGetCountries() {
    return countries_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.String, gunk.example.v1.Country>
  internalGetMutableCountries() {
    if (!countries_.isMutable()) {
      countries_ = countries_.mutableCopy();
    }
    return countries_;
  }
  @java.lang.Override

  public int getCountriesCount() {
    return internalGetCountries().size();
  }
  /**
   * <code>map&lt;string, .gunk.example.v1.Country&gt; Countries = 1[json_name = "countries", ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
   */
  @java.lang.Override

  public boolean containsCountries(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetCountries().containsKey(key);
  }
  /**
   * Use {@link #getCountriesMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, gunk.example.v1.Country> getCountries() {
    return getCountriesMap();
  }
  /**
   * <code>map&lt;string, .gunk.example.v1.Country&gt; Countries = 1[json_name = "countries", ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, gunk.example.v1.Country> getCountriesMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetCountries());
  }
  /**
   * <code>map&lt;string, .gunk.example.v1.Country&gt; Countries = 1[json_name = "countries", ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
   */
  @java.lang.Override

  public gunk.example.v1.Country getCountriesOrDefault(
      java.lang.String key,
      gunk.example.v1.Country defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, gunk.example.v1.Country> map =
        internalGetCountries();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, .gunk.example.v1.Country&gt; Countries = 1[json_name = "countries", ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
   */
  @java.lang.Override

  public gunk.example.v1.Country getCountriesOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, gunk.example.v1.Country> map =
        internalGetCountries();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <code>map&lt;string, .gunk.example.v1.Country&gt; Countries = 1[json_name = "countries", ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
   */
  private java.util.Map<java.lang.String, gunk.example.v1.Country>
  getMutableCountriesMap() {
    return internalGetMutableCountries();
  }

  public static gunk.example.v1.GetCountriesResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static gunk.example.v1.GetCountriesResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static gunk.example.v1.GetCountriesResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static gunk.example.v1.GetCountriesResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static gunk.example.v1.GetCountriesResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static gunk.example.v1.GetCountriesResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static gunk.example.v1.GetCountriesResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static gunk.example.v1.GetCountriesResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static gunk.example.v1.GetCountriesResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static gunk.example.v1.GetCountriesResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static gunk.example.v1.GetCountriesResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static gunk.example.v1.GetCountriesResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(gunk.example.v1.GetCountriesResponse prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * GetCountriesResponse is the get countries response.
   * </pre>
   *
   * Protobuf type {@code gunk.example.v1.GetCountriesResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        gunk.example.v1.GetCountriesResponse, Builder> implements
      // @@protoc_insertion_point(builder_implements:gunk.example.v1.GetCountriesResponse)
      gunk.example.v1.GetCountriesResponseOrBuilder {
    // Construct using gunk.example.v1.GetCountriesResponse.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    @java.lang.Override

    public int getCountriesCount() {
      return instance.getCountriesMap().size();
    }
    /**
     * <code>map&lt;string, .gunk.example.v1.Country&gt; Countries = 1[json_name = "countries", ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.Override

    public boolean containsCountries(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return instance.getCountriesMap().containsKey(key);
    }

    public Builder clearCountries() {
      copyOnWrite();
      instance.getMutableCountriesMap().clear();
      return this;
    }
    /**
     * <code>map&lt;string, .gunk.example.v1.Country&gt; Countries = 1[json_name = "countries", ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */

    public Builder removeCountries(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      copyOnWrite();
      instance.getMutableCountriesMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getCountriesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, gunk.example.v1.Country> getCountries() {
      return getCountriesMap();
    }
    /**
     * <code>map&lt;string, .gunk.example.v1.Country&gt; Countries = 1[json_name = "countries", ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, gunk.example.v1.Country> getCountriesMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getCountriesMap());
    }
    /**
     * <code>map&lt;string, .gunk.example.v1.Country&gt; Countries = 1[json_name = "countries", ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.Override

    public gunk.example.v1.Country getCountriesOrDefault(
        java.lang.String key,
        gunk.example.v1.Country defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, gunk.example.v1.Country> map =
          instance.getCountriesMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .gunk.example.v1.Country&gt; Countries = 1[json_name = "countries", ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.Override

    public gunk.example.v1.Country getCountriesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, gunk.example.v1.Country> map =
          instance.getCountriesMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;string, .gunk.example.v1.Country&gt; Countries = 1[json_name = "countries", ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    public Builder putCountries(
        java.lang.String key,
        gunk.example.v1.Country value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      copyOnWrite();
      instance.getMutableCountriesMap().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, .gunk.example.v1.Country&gt; Countries = 1[json_name = "countries", ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    public Builder putAllCountries(
        java.util.Map<java.lang.String, gunk.example.v1.Country> values) {
      copyOnWrite();
      instance.getMutableCountriesMap().putAll(values);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:gunk.example.v1.GetCountriesResponse)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new gunk.example.v1.GetCountriesResponse();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "countries_",
            CountriesDefaultEntryHolder.defaultEntry,
          };
          java.lang.String info =
              "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u00012";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<gunk.example.v1.GetCountriesResponse> parser = PARSER;
        if (parser == null) {
          synchronized (gunk.example.v1.GetCountriesResponse.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<gunk.example.v1.GetCountriesResponse>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:gunk.example.v1.GetCountriesResponse)
  private static final gunk.example.v1.GetCountriesResponse DEFAULT_INSTANCE;
  static {
    GetCountriesResponse defaultInstance = new GetCountriesResponse();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      GetCountriesResponse.class, defaultInstance);
  }

  public static gunk.example.v1.GetCountriesResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<GetCountriesResponse> PARSER;

  public static com.google.protobuf.Parser<GetCountriesResponse> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

