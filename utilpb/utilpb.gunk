// +gunk java.Package("gunk.example-server")
// +gunk java.MultipleFiles(true)
package utilpb

import (
	"github.com/gunk/opt/field"
	"github.com/gunk/opt/file/java"
	"github.com/gunk/opt/http"
)

// Util is a util service.
type Util interface {
	// CheckStatus returns the server health status.
	//
	// +gunk http.Match{
	//         Method: "GET",
	//         Path:   "/v1/status",
	// }
	CheckStatus() CheckStatusResponse

	// Echo echoes a message.
	//
	// +gunk http.Match{
	//         Method: "GET",
	//         Path:   "/v1/echo",
	// }
	// +gunk http.Match{
	//         Method: "POST",
	//         Path:   "/v1/echo",
	//         Body:   "*",
	// }
	Echo(Message) Message

	// GetCountries returns a list of countries identified by their iso code.
	// (showcases multiple http matching rules with a filter).
	//
	// +gunk http.Match{
	//         Method: "GET",
	//         Path:   "/v1/countries",
	// }
	// +gunk http.Match{
	//         Method: "GET",
	//         Path:   "/v1/countries/{Countries}",
	// }
	GetCountries(GetCountriesRequest) GetCountriesResponse
}

// Status is a server health status.
type Status int

// Status values.
const (
	Unknown Status = iota
	Error
	OK
)

// Message is a echo message.
type Message struct {
	// Msg holds a message.
	Msg  string `pb:"1" json:"msg"`
	Code int    `pb:"2" json:"code"`
}

// Country contains country information.
type Country struct {
	Name string `pb:"1" json:"name"`
	Code string `pb:"2" json:"code"`
}

// CheckStatusResponse is the server health status response.
type CheckStatusResponse struct {
	Status Status `pb:"1" json:"status"`

	// +gunk field.Deprecated(true)
	OldField int `pb:"2" json:"old_field"`
}

// GetCountriesRequest is the get countries request.
type GetCountriesRequest struct {
	Countries []string `pb:"1" json:"countries"`
}

// GetCountriesResponse is the get countries response.
type GetCountriesResponse struct {
	Countries map[string]Country `pb:"1" json:"countries"`
}
